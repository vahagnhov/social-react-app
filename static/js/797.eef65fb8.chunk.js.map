{"version":3,"file":"static/js/797.eef65fb8.chunk.js","mappings":"8NASIA,GAAcC,EAAAA,EAAAA,IAAiB,IAC/BC,GAAaC,EAAAA,EAAAA,IAAiB,GAqC5BC,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EAnCL,SAACE,GAEf,OACI,kBAAMC,SAAUD,EAAME,aAAtB,WACI,0BACI,SAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWC,EAAAA,GAAOC,YAAY,QAAQC,SAAU,CAACC,EAAAA,GAAUf,QAEnF,0BACI,SAAC,IAAD,CAAOU,KAAK,WAAWC,UAAWC,EAAAA,GAAOC,YAAY,WAAWG,KAAK,WAC9DF,SAAU,CAACC,EAAAA,GAAUb,QAEhC,0BACI,SAAC,IAAD,CAAOQ,KAAK,aAAaC,UAAWC,EAAAA,GAAOI,KAAK,eAGnDT,EAAMU,aACP,4BACI,gBAAKC,IAAI,gBAAgBC,IAAKZ,EAAMU,cACpC,0BACI,SAAC,IAAD,CAAOP,KAAK,UAAUC,UAAWC,EAAAA,GAAOC,YAAY,UAC7CC,SAAU,CAACC,EAAAA,WAKzBR,EAAMa,QAAU,gBAAKC,UAAWC,EAAAA,EAAAA,iBAAhB,SACZf,EAAMa,SAEX,0BACI,0CAIf,IAyBD,WAAeG,EAAAA,EAAAA,KAPS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OACnBR,WAAYO,EAAME,KAAKT,WAE9B,GAEuC,CAACU,MAAAA,EAAAA,IAAzC,EArBc,SAACpB,GAMX,OAAIA,EAAMkB,QAAe,SAAC,KAAD,CAAUG,GAAG,cAE/B,4BACH,mCACA,SAACxB,EAAD,CAAgBI,SATE,SAACqB,GACnB,IAAIC,EAAUD,EAASC,QAAUD,EAASC,QAAU,GACpDvB,EAAMoB,MAAME,EAASE,MAAOF,EAASG,SAAUH,EAASI,WAAYH,EACvE,EAM4Cb,WAAYV,EAAMU,eAElE,G,gLC1DKiB,EAAa,SAAAA,GAAU,OAAI,YAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAS7B,GAAW,YACpD8B,EAAWD,EAAKE,SAAWF,EAAKhB,MACtC,OACI,iBAAKC,UAAWC,EAAAA,EAAAA,YAAgB,KAAOe,EAAWf,EAAAA,EAAAA,MAAU,IAA5D,WACI,0BACI,SAAC,GAAD,kBAAgBa,GAAW5B,MAE9B8B,IAAY,gCAAQD,EAAKhB,MAAb,SAGxB,CAV4B,EAYhBmB,EAAWL,EAAW,YAEtBtB,EAAQsB,EAAW,SAEnBM,EAAc,SAAC3B,EAAaH,EAAM+B,EAAY9B,GAAsC,IAA3BJ,EAA0B,uDAAlB,CAAC,EAC3E,OAAO,0BACH,SAAC,KAAD,QAAOM,YAAaA,EAAaH,KAAMA,EAChCI,SAAU2B,EACV9B,UAAWA,GACPJ,KAIlB,C,gIC5BM,IAAMQ,EAAW,SAAA2B,GACpB,IAAIA,EACJ,MAAO,mBACV,EAEYzC,EAAmB,SAAA0C,GAAS,OAAI,SAACD,GAC1C,GAAIA,GAASA,EAAME,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,WAE1C,CAHwC,EAK5BxC,EAAmB,SAAA0C,GAAS,OAAI,SAACH,GAC1C,GAAIA,GAASA,EAAME,OAASC,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,WAE1C,CAHwC,EAK5BC,EAAW,SAAAJ,GACpB,IAAIK,EAAU,IAAIC,OAAO,wKAKC,KAC1B,GAAIN,IAAUK,EAAQE,KAAKP,GAAQ,MAAM,oBAE5C,C,qBCvBD,KAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wC","sources":["components/Login/Login.jsx","components/common/FormsControls/FormsControls.jsx","helpers/validators/validators.js","webpack://my-react-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, minLengthCreator, required} from \"../../helpers/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/reducers/auth-reducer\";\nimport {Navigate} from \"react-router-dom\";\nimport React from \"react\";\nimport s from './../common/FormsControls/FormsControls.module.css';\n\nlet maxLength30 = maxLengthCreator(30);\nlet minLength7 = minLengthCreator(7);\n\nconst LoginForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name='email' component={Input} placeholder='Login' validate={[required, maxLength30]}/>\n            </div>\n            <div>\n                <Field name='password' component={Input} placeholder='password' type='password'\n                       validate={[required, minLength7]}/>\n            </div>\n            <div>\n                <Field name='rememberMe' component={Input} type='checkbox'/>\n            </div>\n\n            {props.captchaUrl &&\n            <div>\n                <img alt='login-captcha' src={props.captchaUrl}/>\n                <div>\n                    <Field name='captcha' component={Input} placeholder='Captcha'\n                           validate={[required]}/>\n                </div>\n            </div>\n            }\n\n            {props.error &&  <div className={s.formSummaryError}>\n                {props.error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    );\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\n\nconst Login = (props) => {\n    const onSubmitLogin = (formData) => {\n        let captcha = formData.captcha ? formData.captcha : '';\n        props.login(formData.email, formData.password, formData.rememberMe, captcha);\n    }\n\n    if (props.isAuth) return <Navigate to='/profile'/>\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmitLogin} captchaUrl={props.captchaUrl}/>\n    </div>\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        captchaUrl: state.auth.captchaUrl\n    }\n}\n\nexport default connect(mapStateToProps, {login})(Login);","import s from './FormsControls.module.css';\nimport {Field} from \"redux-form\";\n\nconst TagElement = TagElement => ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n            <div>\n                <TagElement {...input} {...props} />\n            </div>\n            {hasError && <span> {meta.error} </span>}\n        </div>\n    );\n};\n\nexport const Textarea = TagElement(\"textarea\");\n\nexport const Input = TagElement(\"input\");\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\n    return <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        />\n    </div>\n\n}\n\n","export const required = value => {\n    if (value) return undefined;\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = maxLength => (value) => {\n    if (value && value.length > maxLength) return `Max Length is ${maxLength} symbols`;\n    return undefined;\n}\n\nexport const minLengthCreator = minLength => (value) => {\n    if (value && value.length < minLength) return `Min Length is ${minLength} symbols`;\n    return undefined;\n}\n\nexport const validURL = value => {\n    let pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n        '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n    if (value && !pattern.test(value)) return `Invalid url format`;\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__NR1bV\",\"error\":\"FormsControls_error__wukgD\",\"formSummaryError\":\"FormsControls_formSummaryError__Rdvzq\"};"],"names":["maxLength30","maxLengthCreator","minLength7","minLengthCreator","LoginReduxForm","reduxForm","form","props","onSubmit","handleSubmit","name","component","Input","placeholder","validate","required","type","captchaUrl","alt","src","error","className","s","connect","state","isAuth","auth","login","to","formData","captcha","email","password","rememberMe","TagElement","input","meta","hasError","touched","Textarea","createField","validators","value","maxLength","length","minLength","validURL","pattern","RegExp","test"],"sourceRoot":""}