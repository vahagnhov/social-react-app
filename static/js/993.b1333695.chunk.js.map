{"version":3,"file":"static/js/993.b1333695.chunk.js","mappings":"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","sources":["webpack://my-react-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddNewMessageForm/AddNewMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.jsx","helpers/validators/validators.js","webpack://my-react-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"dialog\":\"Dialogs_dialog__htSTl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\"};","import React from \"react\";\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id;\n    return (\n        <div className={s.dialog + ' ' + s.active} >\n            <NavLink to={path}>\n                <img alt='Avatar' src={props.imgSrc}/>\n                {props.name}\n            </NavLink>\n        </div>\n    );\n}\n\nexport default DialogItem;","import React from \"react\";\nimport s from './../Dialogs.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>\n            {props.message}\n        </div>\n    );\n}\n\nexport default Message;","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../helpers/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nlet maxLength50 = maxLengthCreator(50);\n\nconst AddNewMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name='newMessageBody' component={Textarea} placeholder='Enter your message'\n                       validate={[required, maxLength50]}/>\n            </div>\n            <div>\n                <button>Add Message</button>\n            </div>\n        </form>\n    );\n}\n\nconst AddNewMessageReduxForm = reduxForm({form: 'dialogsAddNewMessageForm'})(AddNewMessageForm);\nexport default AddNewMessageReduxForm;","import React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from './../Dialogs/DialogItem/DialogItem';\nimport Message from './../Dialogs/Message/Message';\nimport AddNewMessageReduxForm from \"./AddNewMessageForm/AddNewMessageForm\";\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogPage;\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name} imgSrc={d.imgSrc}/>);\n    let messagesElements = state.messages.map(m => <Message key={m.id} id={m.id} message={m.message}/>);\n\n    let addNewMessage = (formData) => {\n        props.sendMessage(formData.newMessageBody);\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n               <AddNewMessageReduxForm onSubmit={addNewMessage}/>\n                {messagesElements}\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;","import React from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    };\n};\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Navigate to='/login' />\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}","import {sendMessageAC} from \"../../redux/reducers/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogPage: state.dialogsPage\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageAC(newMessageBody))\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);","import s from './FormsControls.module.css';\nimport {Field} from \"redux-form\";\n\nconst TagElement = TagElement => ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\n            <div>\n                <TagElement {...input} {...props} />\n            </div>\n            {hasError && <span> {meta.error} </span>}\n        </div>\n    );\n};\n\nexport const Textarea = TagElement(\"textarea\");\n\nexport const Input = TagElement(\"input\");\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => {\n    return <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        />\n    </div>\n\n}\n\n","export const required = value => {\n    if (value) return undefined;\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = maxLength => (value) => {\n    if (value && value.length > maxLength) return `Max Length is ${maxLength} symbols`;\n    return undefined;\n}\n\nexport const minLengthCreator = minLength => (value) => {\n    if (value && value.length < minLength) return `Min Length is ${minLength} symbols`;\n    return undefined;\n}\n\nexport const validURL = value => {\n    let pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n        '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\n    if (value && !pattern.test(value)) return `Invalid url format`;\n    return undefined;\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__NR1bV\",\"error\":\"FormsControls_error__wukgD\",\"formSummaryError\":\"FormsControls_formSummaryError__Rdvzq\"};"],"names":["props","path","id","className","s","to","alt","src","imgSrc","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","state","dialogPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","formData","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dialogsPage","dispatch","sendMessageAC","Component","RedirectComponent","this","React","Dialogs","TagElement","input","meta","hasError","touched","error","Input","createField","validators","value","maxLength","length","minLengthCreator","minLength","validURL","pattern","RegExp","test"],"sourceRoot":""}